name: 'Setup Yarn'
description: 'Sets up Yarn to the version specified in package.json using Corepack'

inputs:
  node-version:
    description: 'Node.js version to use'
    required: false
    default: 'lts/*'
  cache:
    description: 'Enable or disable Yarn cache (default: true)'
    required: false
    default: 'true'
    type: boolean

runs:
  using: "composite"
  steps:
    - name: Setup Node.js environment
      uses: actions/setup-node@v4
      with:
        node-version: ${{ inputs.node-version }}
        cache: ${{ inputs.cache == 'true' && 'yarn' || '' }}

    - name: Get Yarn version from package.json
      id: get-yarn-version
      shell: bash
      run: |
        YARN_VERSION=$(grep -oP '"packageManager": "yarn@\K([^\"]+)' package.json)
        if [ -z "$YARN_VERSION" ]; then
          echo "::warning::packageManager field with yarn version not found in package.json. Using default Yarn version managed by Corepack."
          echo "YARN_VERSION=" >> $GITHUB_OUTPUT
        else
          echo "YARN_VERSION=$YARN_VERSION" >> $GITHUB_OUTPUT
        fi
        echo "Extracted Yarn version: ${{ steps.get-yarn-version.outputs.YARN_VERSION }}"

    - name: Enable Corepack and set Yarn version
      shell: bash
      run: |
        corepack enable
        if [[ -n "${{ steps.get-yarn-version.outputs.YARN_VERSION }}" ]]; then
          yarn set version ${{ steps.get-yarn-version.outputs.YARN_VERSION }}
          echo "Using Yarn version: ${{ steps.get-yarn-version.outputs.YARN_VERSION }}"
        else
          echo "Using default Yarn version managed by Corepack."
        fi

    - name: Install dependencies (optional)
      if: ${{ inputs.cache == 'true' }}
      shell: bash
      run: yarn install --frozen-lockfile